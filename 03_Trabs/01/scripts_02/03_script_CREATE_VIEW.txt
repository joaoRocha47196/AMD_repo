--#############
--# AMD GXX
--#############



--==============
-- DB connection
--==============
\set dataBase db_medknow
;
\set userName postgres
;
\connect :dataBase :userName
;
--==========================
--==========================

DROP VIEW IF EXISTS view_dataset;

CREATE OR REPLACE VIEW view_dataset AS
SELECT 
    a.PatientID as PatientID,
    CASE 
        WHEN EXTRACT(YEAR FROM AGE(CURRENT_DATE, p.BirthDate)) BETWEEN 0 AND (SELECT MinLimit FROM OcularAge) THEN 'young'
        WHEN EXTRACT(YEAR FROM AGE(CURRENT_DATE, p.BirthDate)) BETWEEN (SELECT (MinLimit + 1) FROM OcularAge) AND (SELECT MaxLimit FROM OcularAge) THEN 'presbyopic'
        ELSE 'pre-presbyopic'
    END AS age,
    CASE 
        WHEN d.DiseaseID = 2 THEN 'myope'
        WHEN d.DiseaseID = 3 THEN 'hypermetrope'
        ELSE NULL
    END AS prescription,
    CASE 
        WHEN EXISTS (SELECT 1 FROM Appointment_Disease ad2 WHERE ad2.AppointmentID = a.AppointmentID AND ad2.DiseaseID = 1) THEN 'yes'
        ELSE 'no'
    END AS astigmatic,
    CASE 
        WHEN a.TearRate >= (SELECT MidLimit FROM TearRate) THEN 'normal'
        ELSE 'reduced'
    END AS tear_rate,
    CASE 
        WHEN a.LensHardness <= (SELECT MinLimit FROM LensHardness) THEN 'none'
        WHEN a.LensHardness >= (SELECT MaxLimit FROM LensHardness) THEN 'hard'
        ELSE 'soft'
    END AS lenses
FROM 
    Patient p
JOIN 
    Appointment a ON p.PatientID = a.PatientID
LEFT JOIN 
    Appointment_Disease ad ON a.AppointmentID = ad.AppointmentID
LEFT JOIN 
    Disease d ON ad.DiseaseID = d.DiseaseID
WHERE 
    d.DiseaseID IN (2, 3)
ORDER BY 
    PatientID, age, prescription, astigmatic, tear_rate, lenses;

SELECT * FROM view_dataset;

-- SELECT (MinLimit + 1) FROM OcularAge;

-- Create VIEW
