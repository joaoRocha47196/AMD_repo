--#############
--# AMD GXX
--#############



--==============
-- DB connection
--==============
\set dataBase db_medknow
;
\set userName postgres
;
\connect :dataBase :userName
;
--==========================
--==========================


DROP TABLE IF EXISTS DIAGNOSIS;
DROP TABLE IF EXISTS APPOINTMENT;
DROP TABLE IF EXISTS DOCTOR;
DROP TABLE IF EXISTS PATIENT;
DROP TABLE IF EXISTS DISEASE;
DROP TABLE IF EXISTS LENSES;
DROP TABLE IF EXISTS AGE;
DROP TABLE IF EXISTS TEAR_RATE;


-------------------------------
------- create table ----------
-------------------------------

CREATE TABLE AGE
(
ageValue VARCHAR( 30 ) PRIMARY KEY,
minAge INT NOT NULL,
maxAge INT NOT NULL
);



CREATE TABLE TEAR_RATE
(
tearValue VARCHAR( 30 ) PRIMARY KEY,
minRate FLOAT NOT NULL,
maxRate FLOAT NOT NULL
);



CREATE TABLE LENSES
(
lensesType VARCHAR( 30 ) PRIMARY KEY
);



CREATE TABLE PATIENT
(
patientID INT PRIMARY KEY,
patientName VARCHAR( 30 ) NOT NULL,
birthDate DATE NOT NULL
);



CREATE TABLE DOCTOR
(
doctorID INT PRIMARY KEY,
doctorName VARCHAR( 30 ) NOT NULL,
birthDate DATE NOT NULL
);



CREATE TABLE DISEASE
(
diseaseName VARCHAR( 120 ) PRIMARY KEY
);



CREATE TABLE APPOINTMENT
(
patientID INT NOT NULL,
doctorID INT NOT NULL,
"date" TIMESTAMP,

CONSTRAINT fk_patient FOREIGN KEY(patientID) REFERENCES PATIENT(patientID),
CONSTRAINT fk_doctor FOREIGN KEY(doctorID) REFERENCES DOCTOR(doctorID),
PRIMARY KEY(patientID, doctorID, "date")
);


-- modificar - diagnostico pode ter varias doencas
CREATE TABLE DIAGNOSIS
(
patientID INT,
doctorID INT,
"date" TIMESTAMP,
diseaseName VARCHAR( 120 ),
lensesType VARCHAR( 30 ),
tearRate FLOAT NOT NULL,

CONSTRAINT fk_appointment FOREIGN KEY(patientID, doctorID, "date") REFERENCES APPOINTMENT(patientID, doctorID, "date"),
CONSTRAINT fk_disease FOREIGN KEY(diseaseName) REFERENCES DISEASE(diseaseName),
CONSTRAINT fk_lense FOREIGN KEY(lensesType) REFERENCES LENSES(lensesType),
PRIMARY KEY(patientID, doctorID, "date", diseaseName)
);
